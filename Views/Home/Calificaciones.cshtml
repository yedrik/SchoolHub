@using SchoolHub.dtos
@using Microsoft.AspNetCore.Http
@using System.Text.Json
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewBag.Title = "Calificaciones - SchoolHub";

    // 1. Obtener usuario de las cookies (alternativa a Session)
    var usuarioJson = HttpContextAccessor.HttpContext.Request.Cookies["UserLogged"];
    var personaLogeo = !string.IsNullOrEmpty(usuarioJson)
        ? JsonSerializer.Deserialize<UserDto>(usuarioJson)
        : null;

    // 2. Datos del ViewData (sin cambios)
    var calificaciones = ViewData["calificaciones"] as List<CalificacionDto> ?? new List<CalificacionDto>();
    var estudiantes = ViewData["estudiantes"] as List<EstudianteDto> ?? new List<EstudianteDto>();
    var materias = ViewData["materias"] as List<MateriaDto> ?? new List<MateriaDto>();
}

@if (personaLogeo == null)
{
    <div class="alert alert-warning">
        <p>Por favor inicie sesión primero</p>
        <a href="@Url.Action("Index", "Home")" class="btn btn-primary">Iniciar sesión</a>
    </div>
}
else
{
    <!-- Tu HTML existente aquí -->
    <!DOCTYPE html>
    <html>
    <!-- ... resto del código ... -->
    </html>
}
    <!DOCTYPE html>
    <html lang="es">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>@ViewBag.Title</title>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
        <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&display=swap" rel="stylesheet">
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <style>
            /* Estilos permanecen exactamente iguales */
            :root {
            /* REEMPLAZA EL STYLE ACTUAL POR ESTE */
            : root

        {
            --primary: #4361ee;
            --primary-light: #eef1fd;
            --secondary: #3f37c9;
            --accent: #4cc9f0;
            --light: #f8f9fa;
            --dark: #212529;
            --gray: #6c757d;
            --light-gray: #e9ecef;
            --success: #4bb543;
            --success-light: #edf7ed;
            --warning: #ffcc00;
            --warning-light: #fff9e6;
            --danger: #ff3333;
            --danger-light: #ffebeb;
            --info: #17a2b8;
            --shadow-sm: 0 2px 8px rgba(0, 0, 0, 0.05);
            --shadow-md: 0 4px 20px rgba(0, 0, 0, 0.1);
            --shadow-lg: 0 8px 30px rgba(0, 0, 0, 0.15);
            --border-radius-sm: 8px;
            --border-radius-md: 12px;
            --border-radius-lg: 16px;
            --transition: all 0.3s ease;
        }

        body {
            background-color: #f8fafc;
        }

        .container {
            max-width: 1400px;
        }

        /* Header mejorado */
        header {
            background-color: white;
            box-shadow: var(--shadow-sm);
            padding: 15px 0;
        }

        .logo {
            font-size: 1.5rem;
            font-weight: 600;
        }

        .nav-links {
            gap: 20px;
        }

            .nav-links a {
                font-weight: 500;
            }

        /* Contenido principal */
        .main-content {
            padding: 30px 0;
        }

        /* Tarjetas modernas */
        .card {
            background-color: white;
            border-radius: var(--border-radius-md);
            box-shadow: var(--shadow-sm);
            padding: 20px;
            margin-bottom: 20px;
        }

        .card-header {
            margin-bottom: 20px;
        }

        /* Gráficos */
        .charts-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(400px, 1fr));
            gap: 20px;
        }

        .chart-wrapper {
            height: 250px;
        }

        /* Formulario mejorado */
        .add-grade-form {
            background-color: white;
            border-radius: var(--border-radius-md);
            padding: 25px;
        }

        .form-group {
            margin-bottom: 20px;
        }

        /* Tabla mejorada */
        .grades-table th {
            background-color: var(--light);
            text-transform: uppercase;
            font-size: 0.8rem;
        }

        .grades-table tr:hover td {
            background-color: var(--primary-light);
        }

        .student-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            margin-right: 10px;
        }

        .grade-value {
            padding: 5px 10px;
            border-radius: 20px;
            font-weight: 600;
        }

        /* Colores para calificaciones */
        .grade-excellent {
            color: var(--success);
            background-color: var(--success-light);
        }

        .grade-good {
            color: var(--info);
            background-color: #e8f7fa;
        }

        .grade-regular {
            color: var(--warning);
            background-color: var(--warning-light);
        }

        .grade-fail {
            color: var(--danger);
            background-color: var(--danger-light);
        }

        /* Responsive */
        media (max-width: 768px) {
            .charts-container
        }

        {
            grid-template-columns: 1fr;
        }

        .grade-filters {
            flex-direction: column;
        }
    </style>
    </head>
    <body>
        <header>
            <div class="container">
                <div style="display: flex; justify-content: space-between; align-items: center;">
                    <a href="@Url.Action("Index", "Home")" class="logo">
                        <i class="fas fa-graduation-cap"></i>
                        SchoolHub
                    </a>
                    <ul class="nav-links">
                        <li>@Html.ActionLink("Dashboard", "Dashboard", "Home")</li>
                        <li>@Html.ActionLink("Estudiantes", "Estudiantes", "Home")</li>
                        <li>@Html.ActionLink("Calificaciones", "Calificaciones", "Home", null, new { @class = "active" })</li>
                        <li>@Html.ActionLink("Reportes", "Reportes", "Home")</li>
                        <li><a href="#"><i class="fas fa-user"></i> @personaLogeo.Nombres</a></li>
                        <li>@Html.ActionLink("Cerrar Sesión", "CerrarSesion", "Home")</li>
                    </ul>
                </div>
            </div>
        </header>

        <div class="main-content">
            <div class="container">
                <div class="page-header">
                    <div class="page-title">
                        <h1><i class="fas fa-star"></i> Gestión de Calificaciones</h1>
                        <p>Registro, seguimiento y análisis de rendimiento académico</p>
                    </div>
                    <div>
                        <a href="@Url.Action("Dashboard", "Home")" class="btn btn-secondary" style="margin-right: 10px;">
                            <i class="fas fa-arrow-left"></i> Volver
                        </a>
                        <button class="btn btn-success" id="showAddGradeForm">
                            <i class="fas fa-plus"></i> Agregar Calificación
                        </button>
                    </div>
                </div>

                <!-- Gráficos y estadísticas -->
                <div class="charts-container">
                    <div class="chart-card">
                        <h3 class="chart-title">Promedios por Materia</h3>
                        <div class="chart-wrapper">
                            <canvas id="subjectAveragesChart"></canvas>
                        </div>
                        <div class="grade-summary">
                            <div class="summary-item">
                                <div class="summary-value grade-excellent">4.8</div>
                                <div class="summary-label">Mejor promedio</div>
                            </div>
                            <div class="summary-item">
                                <div class="summary-value">3.6</div>
                                <div class="summary-label">Promedio general</div>
                            </div>
                            <div class="summary-item">
                                <div class="summary-value grade-fail">2.9</div>
                                <div class="summary-label">Peor promedio</div>
                            </div>
                        </div>
                    </div>

                    <div class="chart-card">
                        <h3 class="chart-title">Distribución de Calificaciones</h3>
                        <div class="chart-wrapper">
                            <canvas id="gradesDistributionChart"></canvas>
                        </div>
                        <div class="grade-summary">
                            <div class="summary-item">
                                <div class="summary-value grade-excellent">28%</div>
                                <div class="summary-label">Excelente (4.5-5.0)</div>
                            </div>
                            <div class="summary-item">
                                <div class="summary-value grade-good">42%</div>
                                <div class="summary-label">Bueno (3.5-4.4)</div>
                            </div>
                            <div class="summary-item">
                                <div class="summary-value grade-fail">12%</div>
                                <div class="summary-label">Reprobados (menor 3.0) </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Formulario para agregar calificación (oculto inicialmente) -->
                <div class="add-grade-form" id="addGradeForm" style="display: none;">
                    <h3 class="chart-title"><i class="fas fa-plus-circle"></i> Registrar Nueva Calificación</h3>
                    <form id="gradeForm">
                        <div class="form-group">
                            <label class="form-label">Estudiante</label>
                            <select class="form-select" id="studentSelect" required>
                                <option value="">Seleccionar estudiante</option>
                                @foreach (var estudiante in estudiantes)
                                {
                                    <option value="@estudiante.IdEstudiante">@estudiante.Nombres @estudiante.Apellidos - @estudiante.Grado</option>
                                }
                            </select>
                        </div>
                        <div class="form-group">
                            <label class="form-label">Materia</label>
                            <select class="form-select" id="subjectSelect" required>
                                <option value="">Seleccionar materia</option>
                                @foreach (var materia in materias)
                                {
                                    <option value="@materia.IdMateria">@materia.Nombre</option>
                                }
                            </select>
                        </div>
                        <div class="form-group">
                            <label class="form-label">Calificación (0.0 - 5.0)</label>
                            <input type="number" class="form-control" id="gradeInput" min="0" max="5" step="0.1" required>
                        </div>
                        <div class="form-group">
                            <label class="form-label">Periodo</label>
                            <select class="form-select" id="periodSelect" required>
                                <option value="1">Primer Periodo</option>
                                <option value="2">Segundo Periodo</option>
                                <option value="3">Tercer Periodo</option>
                                <option value="4">Cuarto Periodo</option>
                            </select>
                        </div>
                        <div class="form-group">
                            <label class="form-label">Fecha</label>
                            <input type="date" class="form-control" id="gradeDate" required>
                        </div>
                        <div class="form-group">
                            <label class="form-label">Comentarios</label>
                            <textarea class="form-control" id="gradeComments" rows="3"></textarea>
                        </div>
                        <div class="form-group">
                            <button type="submit" class="btn btn-primary">Guardar Calificación</button>
                            <button type="button" class="btn btn-danger" id="cancelAddGrade">Cancelar</button>
                        </div>
                    </form>
                </div>

                <!-- Tabla de calificaciones -->
                <div class="grades-container">
                    <div class="grades-header">
                        <h2 class="grades-title"><i class="fas fa-list"></i> Registro de Calificaciones</h2>
                        <div class="grade-filters">
                            <div class="filter-group">
                                <label class="filter-label">Grado</label>
                                <select id="gradeFilter" class="filter-select">
                                    <option value="">Todos</option>
                                    <option value="1">1° Grado</option>
                                    <option value="2">2° Grado</option>
                                    <option value="3">3° Grado</option>
                                    <option value="4">4° Grado</option>
                                    <option value="5">5° Grado</option>
                                </select>
                            </div>
                            <div class="filter-group">
                                <label class="filter-label">Materia</label>
                                <select id="subjectFilter" class="filter-select">
                                    <option value="">Todas</option>
                                    @foreach (var materia in materias)
                                    {
                                        <option value="@materia.IdMateria">@materia.Nombre</option>
                                    }
                                </select>
                            </div>
                            <div class="filter-group">
                                <label class="filter-label">Periodo</label>
                                <select id="periodFilter" class="filter-select">
                                    <option value="">Todos</option>
                                    <option value="1">Primer Periodo</option>
                                    <option value="2">Segundo Periodo</option>
                                    <option value="3">Tercer Periodo</option>
                                    <option value="4">Cuarto Periodo</option>
                                </select>
                            </div>
                        </div>
                    </div>

                    <div class="table-responsive">
                        <table class="grades-table">
                            <thead>
                                <tr>
                                    <th>Estudiante</th>
                                    <th>Materia</th>
                                    <th>Calificación</th>
                                    <th>Periodo</th>
                                    <th>Fecha</th>
                                    <th>Acciones</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (calificaciones != null && calificaciones.Count > 0)
                                {
                                    foreach (var calificacion in calificaciones)
                                    {
                                        var estudiante = estudiantes.FirstOrDefault(e => e.IdEstudiante == calificacion.IdEstudiante);
                                        var materia = materias.FirstOrDefault(m => m.IdMateria == calificacion.IdMateria);
                                        var gradeClass = calificacion.Nota >= 4.5 ? "grade-excellent" :
                                        calificacion.Nota >= 3.5 ? "grade-good" :
                                        calificacion.Nota >= 3.0 ? "grade-regular" : "grade-fail";
                                        
                                        <tr>
                                            <td>
                                                <img src="@(estudiante != null && !string.IsNullOrEmpty(estudiante.Foto) ? estudiante.Foto : "/Content/images/default-avatar.png")"
                                                     class="student-avatar" alt="Foto del estudiante">
                                                @(estudiante?.Nombres ?? "N/A") @(estudiante?.Apellidos ?? "")
                                            </td>
                                            <td>@(materia?.Nombre ?? "N/A")</td>
                                            <td class="grade-value @gradeClass">@calificacion.Nota.ToString("0.0")</td>
                                            <td>@calificacion.Periodo</td>
                                            <td>@calificacion.Fecha.ToString("dd/MM/yyyy")</td>
                                            <td>
                                                <div class="action-buttons">
                                                    <a href="@Url.Action("EditarCalificacion", "Home", new { id = calificacion.IdCalificacion })"
                                                       class="btn btn-warning btn-sm" title="Editar">
                                                        <i class="fas fa-edit"></i>
                                                    </a>
                                                    <a href="@Url.Action("DetalleCalificacion", "Home", new { id = calificacion.IdCalificacion })"
                                                       class="btn btn-primary btn-sm" title="Detalles">
                                                        <i class="fas fa-info-circle"></i>
                                                    </a>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="6" class="no-grades">
                                            <i class="fas fa-star" style="font-size: 2rem; margin-bottom: 1rem;"></i>
                                            <p>No se encontraron calificaciones registradas</p>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <script>
            // Mostrar/ocultar formulario para agregar calificación
            document.getElementById('showAddGradeForm').addEventListener('click', function () {
                document.getElementById('addGradeForm').style.display = 'block';
                window.scrollTo({
                    top: document.getElementById('addGradeForm').offsetTop - 20,
                    behavior: 'smooth'
                });
            });

            document.getElementById('cancelAddGrade').addEventListener('click', function () {
                document.getElementById('addGradeForm').style.display = 'none';
                document.getElementById('gradeForm').reset();
            });

            // Configurar la fecha actual por defecto
            document.getElementById('gradeDate').valueAsDate = new Date();

            // Gráfico de promedios por materia
            const subjectAveragesCtx = document.getElementById('subjectAveragesChart').getContext('2d');
            const subjectAveragesChart = new Chart(subjectAveragesCtx, {
                type: 'bar',
                data: {
                    labels: ['Matemáticas', 'Ciencias', 'Lenguaje', 'Historia', 'Inglés', 'Arte'],
                    datasets: [{
                        label: 'Promedio',
                        data: [4.2, 3.8, 4.5, 3.6, 4.1, 3.9],
                        backgroundColor: [
                            'rgba(67, 97, 238, 0.7)',
                            'rgba(76, 201, 240, 0.7)',
                            'rgba(75, 181, 67, 0.7)',
                            'rgba(255, 204, 0, 0.7)',
                            'rgba(255, 51, 51, 0.7)',
                            'rgba(153, 102, 255, 0.7)'
                        ],
                        borderColor: [
                            'rgba(67, 97, 238, 1)',
                            'rgba(76, 201, 240, 1)',
                            'rgba(75, 181, 67, 1)',
                            'rgba(255, 204, 0, 1)',
                            'rgba(255, 51, 51, 1)',
                            'rgba(153, 102, 255, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    scales: {
                        y: {
                            beginAtZero: false,
                            min: 3,
                            max: 5
                        }
                    },
                    plugins: {
                        legend: {
                            display: false
                        },
                        tooltip: {
                            callbacks: {
                                label: function (context) {
                                    return 'Promedio: ' + context.raw.toFixed(1);
                                }
                            }
                        }
                    }
                }
            });

            // Gráfico de distribución de calificaciones
            const gradesDistributionCtx = document.getElementById('gradesDistributionChart').getContext('2d');
            const gradesDistributionChart = new Chart(gradesDistributionCtx, {
                type: 'pie',
                data: {
                    labels: ['Excelente (4.5-5.0)', 'Bueno (3.5-4.4)', 'Regular (3.0-3.4)', 'Reprobado (<3.0)'],
                    datasets: [{
                        data: [28, 42, 18, 12],
                        backgroundColor: [
                            'rgba(75, 181, 67, 0.7)',
                            'rgba(76, 201, 240, 0.7)',
                            'rgba(255, 204, 0, 0.7)',
                            'rgba(255, 51, 51, 0.7)'
                        ],
                        borderColor: [
                            'rgba(75, 181, 67, 1)',
                            'rgba(76, 201, 240, 1)',
                            'rgba(255, 204, 0, 1)',
                            'rgba(255, 51, 51, 1)'
                        ],
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom',
                        },
                        tooltip: {
                            callbacks: {
                                label: function (context) {
                                    return context.label + ': ' + context.raw + '%';
                                }
                            }
                        }
                    }
                }
            });

            // Función para filtrar la tabla
            function filterTable() {
                const grade = document.getElementById('gradeFilter').value.toLowerCase();
                const subject = document.getElementById('subjectFilter').value;
                const period = document.getElementById('periodFilter').value;

                const rows = document.querySelectorAll('.grades-table tbody tr');

                rows.forEach(row => {
                    if (row.querySelector('.no-grades')) return;

                    const rowGrade = row.cells[0].textContent.toLowerCase();
                    const rowSubject = row.cells[1].textContent;
                    const rowPeriod = row.cells[3].textContent;

                    const gradeMatch = grade === '' || rowGrade.includes(grade);
                    const subjectMatch = subject === '' || rowSubject.includes(document.getElementById('subjectFilter').options[document.getElementById('subjectFilter').selectedIndex].text);
                    const periodMatch = period === '' || rowPeriod.includes(document.getElementById('periodFilter').options[document.getElementById('periodFilter').selectedIndex].text);

                    if (gradeMatch && subjectMatch && periodMatch) {
                        row.style.display = '';
                    } else {
                        row.style.display = 'none';
                    }
                });

                // Verificar si todas las filas están ocultas
                const visibleRows = Array.from(rows).filter(row => row.style.display !== 'none');
                if (visibleRows.length === 0) {
                    document.querySelector('.no-grades').style.display = '';
                } else {
                    document.querySelector('.no-grades').style.display = 'none';
                }
            }

            // Event listeners para los filtros
            document.getElementById('gradeFilter').addEventListener('change', filterTable);
            document.getElementById('subjectFilter').addEventListener('change', filterTable);
            document.getElementById('periodFilter').addEventListener('change', filterTable);

            // Envío del formulario (simulado)
            document.getElementById('gradeForm').addEventListener('submit', function (e) {
                e.preventDefault();

                // Aquí iría el código para enviar los datos al servidor
                alert('Calificación registrada exitosamente');
                document.getElementById('addGradeForm').style.display = 'none';
                this.reset();

                // En una implementación real, actualizaríamos la tabla y los gráficos
                // con los nuevos datos desde el servidor
            });

            // Conectar con el dashboard (simulado)
            function updateDashboardStats() {
                // En una implementación real, esto se haría con una llamada a una API
                // o usando SignalR para actualizaciones en tiempo real
                console.log('Actualizando estadísticas del dashboard...');
            }

            // Actualizar estadísticas cada 30 segundos (simulado)
            setInterval(updateDashboardStats, 30000);
            updateDashboardStats();
        </script>
    </body>
    </html>
}