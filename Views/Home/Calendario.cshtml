@using SchoolHub.dtos
@using Microsoft.AspNetCore.Http
@using System.Text.Json
@inject IHttpContextAccessor HttpContextAccessor
@{
    ViewBag.Title = "Calendario - SchoolHub";

    // Obtener usuario de las cookies (reemplazo a Session)
    var usuarioJson = HttpContextAccessor.HttpContext.Request.Cookies["UserLogged"];
    var usuario = !string.IsNullOrEmpty(usuarioJson)
        ? JsonSerializer.Deserialize<UserDto>(usuarioJson)
        : null;

    List<EventoDto> eventos = ViewBag.Eventos as List<EventoDto> ?? new List<EventoDto>();
}

@if (usuario == null)
{
    <div class="alert alert-warning">
        <p>Usuario no encontrado. Por favor, inicie sesión.</p>
        <a href="@Url.Action("Login", "Account")" class="btn btn-primary">Iniciar sesión</a>
    </div>
}
else
{
    <!DOCTYPE html>
    <html lang="es">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>@ViewBag.Title</title>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
        <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700&display=swap" rel="stylesheet">
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.css">
        <style>
            :root {
                --primary: #4361ee;
                --secondary: #3f37c9;
                --accent: #4cc9f0;
                --light: #f8f9fa;
                --dark: #212529;
                --success: #4bb543;
                --warning: #ffcc00;
                --danger: #ff3333;
                --shadow-sm: 0 2px 8px rgba(0, 0, 0, 0.05);
                --shadow-md: 0 4px 20px rgba(0, 0, 0, 0.1);
                --shadow-lg: 0 8px 30px rgba(0, 0, 0, 0.15);
                --border-radius-sm: 8px;
                --border-radius-md: 12px;
                --border-radius-lg: 16px;
                --transition: all 0.3s ease;
            }

            * {
                margin: 0;
                padding: 0;
                box-sizing: border-box;
                font-family: 'Poppins', 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            }

            body {
                background-color: #f5f7ff;
                color: var(--dark);
                line-height: 1.6;
            }

            header {
                background-color: white;
                box-shadow: 0 2px 10px rgba(0,0,0,0.1);
                padding: 1.5rem 0;
                position: fixed;
                width: 100%;
                top: 0;
                z-index: 1000;
            }

            .container {
                width: 85%;
                max-width: 1200px;
                margin: 0 auto;
                display: flex;
                justify-content: space-between;
                align-items: center;
            }

            .logo {
                font-size: 1.8rem;
                font-weight: 700;
                color: var(--primary);
                display: flex;
                align-items: center;
                text-decoration: none;
            }

                .logo i {
                    margin-right: 10px;
                    color: var(--accent);
                }

            .nav-links {
                display: flex;
                list-style: none;
            }

                .nav-links li {
                    margin-left: 2rem;
                }

                .nav-links a {
                    text-decoration: none;
                    color: var(--dark);
                    font-weight: 500;
                    transition: color 0.3s;
                }

                    .nav-links a:hover {
                        color: var(--primary);
                    }

            .main-content {
                padding: 8rem 0 2rem;
            }

            .page-header {
                margin-bottom: 2rem;
                display: flex;
                justify-content: space-between;
                align-items: center;
            }

            .page-title h1 {
                font-size: 2rem;
                color: var(--dark);
            }

            .page-title p {
                color: #6c757d;
            }

            .btn {
                display: inline-block;
                padding: 0.8rem 1.8rem;
                border-radius: var(--border-radius-sm);
                text-decoration: none;
                font-weight: 600;
                transition: var(--transition);
                border: none;
                cursor: pointer;
                font-size: 1rem;
            }

            .btn-primary {
                background-color: var(--primary);
                color: white;
            }

                .btn-primary:hover {
                    background-color: var(--secondary);
                    transform: translateY(-3px);
                    box-shadow: 0 10px 20px rgba(67, 97, 238, 0.3);
                }

            .btn-secondary {
                background-color: var(--accent);
                color: white;
            }

                .btn-secondary:hover {
                    background-color: #3aa8c9;
                    transform: translateY(-3px);
                    box-shadow: 0 10px 20px rgba(76, 201, 240, 0.3);
                }

            .calendar-container {
                background-color: white;
                border-radius: var(--border-radius-md);
                box-shadow: var(--shadow-sm);
                padding: 1.5rem;
            }

            /* FullCalendar Customizations */
            .fc-toolbar-title {
                font-family: 'Poppins', sans-serif;
                color: var(--dark);
                font-weight: 600;
            }

            .fc-button {
                background-color: var(--primary) !important;
                border-color: var(--primary) !important;
                border-radius: var(--border-radius-sm) !important;
                padding: 0.5rem 1rem !important;
                transition: var(--transition) !important;
            }

                .fc-button:hover {
                    background-color: var(--secondary) !important;
                    border-color: var(--secondary) !important;
                    transform: translateY(-2px);
                }

            .fc-button-active {
                background-color: var(--secondary) !important;
                border-color: var(--secondary) !important;
            }

            .fc-event {
                border-radius: var(--border-radius-sm);
                border: none;
                padding: 2px 5px;
                font-size: 0.9rem;
                cursor: pointer;
                transition: var(--transition);
            }

                .fc-event:hover {
                    transform: translateY(-2px);
                    box-shadow: var(--shadow-sm);
                }

            /* Event type colors */
            .event-clase {
                background-color: var(--primary);
            }

            .event-examen {
                background-color: var(--danger);
            }

            .event-tarea {
                background-color: var(--success);
            }

            .event-reunion {
                background-color: var(--warning);
                color: var(--dark);
            }

            .event-actividad {
                background-color: var(--accent);
            }

            /* Modals */
            .modal-overlay {
                position: fixed;
                top: 0;
                left: 0;
                right: 0;
                bottom: 0;
                background-color: rgba(0,0,0,0.5);
                display: flex;
                justify-content: center;
                align-items: center;
                z-index: 1000;
                display: none;
            }

            .modal-content {
                background-color: white;
                border-radius: var(--border-radius-md);
                box-shadow: var(--shadow-lg);
                width: 90%;
                max-width: 600px;
                padding: 2rem;
                position: relative;
            }

            .modal-close {
                position: absolute;
                top: 1rem;
                right: 1rem;
                background: none;
                border: none;
                font-size: 1.5rem;
                cursor: pointer;
                color: #6c757d;
                transition: var(--transition);
            }

                .modal-close:hover {
                    color: var(--danger);
                    transform: rotate(90deg);
                }

            .modal-title {
                color: var(--primary);
                margin-bottom: 1.5rem;
                font-size: 1.5rem;
                font-weight: 600;
            }

            .form-group {
                margin-bottom: 1.5rem;
            }

            .form-label {
                display: block;
                margin-bottom: 0.5rem;
                font-weight: 600;
                color: var(--dark);
            }

            .form-control {
                width: 100%;
                padding: 0.75rem 1rem;
                border: 1px solid #e9ecef;
                border-radius: var(--border-radius-sm);
                font-size: 1rem;
                transition: var(--transition);
            }

                .form-control:focus {
                    border-color: var(--primary);
                    box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.2);
                    outline: none;
                }

            .form-select {
                width: 100%;
                padding: 0.75rem 1rem;
                border: 1px solid #e9ecef;
                border-radius: var(--border-radius-sm);
                font-size: 1rem;
                background-color: white;
                transition: var(--transition);
            }

                .form-select:focus {
                    border-color: var(--primary);
                    box-shadow: 0 0 0 3px rgba(67, 97, 238, 0.2);
                    outline: none;
                }

            .event-details {
                margin-top: 1rem;
            }

            .event-detail {
                display: flex;
                margin-bottom: 0.75rem;
            }

            .event-detail-label {
                font-weight: 600;
                min-width: 100px;
                color: #6c757d;
            }

            .action-buttons {
                display: flex;
                gap: 1rem;
                margin-top: 2rem;
            }

            /* Responsive */
            @@media (max-width: 768px) {
                .main-content {
                    padding: 6rem 0 2rem;
                }

                .container {
                    flex-direction: column;
                }

                .nav-links {
                    margin-top: 1rem;
                    flex-wrap: wrap;
                    justify-content: center;
                }

                    .nav-links li {
                        margin: 0.5rem;
                    }

                .page-header {
                    flex-direction: column;
                    align-items: flex-start;
                    gap: 1rem;
                }

                .fc-toolbar {
                    flex-direction: column;
                    gap: 0.5rem;
                }

                .fc-toolbar-chunk {
                    display: flex;
                    justify-content: center;
                    margin-bottom: 0.5rem;
                }
            }
        </style>
    </head>
    <body>
        <header>
            <div class="container">
                <a href="@Url.Action("Index", "Home")" class="logo">
                    <i class="fas fa-graduation-cap"></i>
                    SchoolHub
                </a>
                <ul class="nav-links">
                    <li>@Html.ActionLink("Cursos", "Cursos", "Home")</li>
                    <li>@Html.ActionLink("Tareas", "Tarea", "Home")</li>
                    <li>@Html.ActionLink("Calendario", "Calendario", "Home")</li>
                    <li>@Html.ActionLink("Perfil", "Perfil", "Home")</li>
                    <li>@Html.ActionLink("Cerrar Sesión", "CerrarSesion", "Home")</li>
                </ul>
            </div>
        </header>

        <div class="main-content">
            <div class="container">
                <div class="page-header">
                    <div class="page-title">
                        <h1>Calendario Escolar</h1>
                        <p>Visualiza y gestiona todos tus eventos académicos</p>
                    </div>
                    <div>
                        <a href="@Url.Action("Dashboard", "Home")" class="btn btn-secondary" style="margin-right: 10px;">
                            <i class="fas fa-arrow-left"></i> Volver 
                        </a>
                        <button class="btn btn-primary" id="addEventBtn">
                            <i class="fas fa-plus"></i> Nuevo Evento
                        </button>
                        <button class="btn btn-secondary" id="viewTasksBtn">
                            <i class="fas fa-tasks"></i> Ver Tareas
                        </button>
                    </div>
                </div>

                <div class="calendar-container">
                    <div id="calendar"></div>
                </div>
            </div>
        </div>

        <!-- Add Event Modal -->
        <div class="modal-overlay" id="eventModal">
            <div class="modal-content">
                <button class="modal-close" id="closeModal">&times;</button>
                <h2 class="modal-title">Agregar Nuevo Evento</h2>
                <form id="eventForm">
                    <div class="form-group">
                        <label class="form-label">Título</label>
                        <input type="text" class="form-control" id="eventTitle" required>
                    </div>
                    <div class="form-group">
                        <label class="form-label">Tipo de Evento</label>
                        <select class="form-select" id="eventType" required>
                            <option value="clase">Clase</option>
                            <option value="examen">Examen</option>
                            <option value="tarea">Tarea</option>
                            <option value="reunion">Reunión</option>
                            <option value="actividad">Actividad</option>
                        </select>
                    </div>
                    <div class="form-group">
                        <label class="form-label">Fecha y Hora de Inicio</label>
                        <input type="datetime-local" class="form-control" id="eventStart" required>
                    </div>
                    <div class="form-group">
                        <label class="form-label">Fecha y Hora de Fin</label>
                        <input type="datetime-local" class="form-control" id="eventEnd">
                    </div>
                    <div class="form-group">
                        <label class="form-label">Descripción</label>
                        <textarea class="form-control" id="eventDescription" rows="3"></textarea>
                    </div>
                    <div class="form-group">
                        <label class="form-label">Profesor/Responsable</label>
                        <input type="text" class="form-control" id="eventTeacher">
                    </div>
                    <div class="form-group">
                        <label class="form-label">Ubicación</label>
                        <input type="text" class="form-control" id="eventLocation">
                    </div>
                    <div class="form-group">
                        <button type="submit" class="btn btn-primary">Guardar Evento</button>
                    </div>
                </form>
            </div>
        </div>

        <!-- Event Details Modal -->
        <div class="modal-overlay" id="detailsModal">
            <div class="modal-content">
                <button class="modal-close" id="closeDetails">&times;</button>
                <h2 class="modal-title" id="detailsTitle">Detalles del Evento</h2>
                <div class="event-details">
                    <div class="event-detail">
                        <span class="event-detail-label">Tipo:</span>
                        <span id="detailsType"></span>
                    </div>
                    <div class="event-detail">
                        <span class="event-detail-label">Fecha:</span>
                        <span id="detailsDate"></span>
                    </div>
                    <div class="event-detail">
                        <span class="event-detail-label">Hora:</span>
                        <span id="detailsTime"></span>
                    </div>
                    <div class="event-detail">
                        <span class="event-detail-label">Profesor:</span>
                        <span id="detailsTeacher"></span>
                    </div>
                    <div class="event-detail">
                        <span class="event-detail-label">Ubicación:</span>
                        <span id="detailsLocation"></span>
                    </div>
                    <div class="event-detail">
                        <span class="event-detail-label">Descripción:</span>
                        <span id="detailsDescription"></span>
                    </div>
                </div>
                <div class="action-buttons">
                    <button class="btn btn-secondary" id="editEventBtn">
                        <i class="fas fa-edit"></i> Editar
                    </button>
                    <button class="btn btn-danger" id="deleteEventBtn" style="background-color: var(--danger);">
                        <i class="fas fa-trash"></i> Eliminar
                    </button>
                </div>
            </div>
        </div>

        <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/main.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/fullcalendar@5.11.3/locales/es.min.js"></script>
        <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Inicializar calendario
            const calendarEl = document.getElementById('calendar');
            const calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                locale: 'es',
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay,listWeek'
                },
                editable: true,
                selectable: true,
                eventClick: function(info) {
                    showEventDetails(info.event);
                },
                select: function(info) {
                    openAddEventModal(info.start, info.end);
                },
                events: [
                    // Eventos de ejemplo (en una aplicación real estos vendrían de una API)
                    {
                        title: 'Matemáticas - Álgebra',
                        start: new Date(),
                        end: new Date(new Date().setHours(new Date().getHours() + 1)),
                        extendedProps: {
                            type: 'clase',
                            description: 'Clase sobre ecuaciones cuadráticas',
                            teacher: 'Prof. García',
                            location: 'Aula 203'
                        },
                        className: 'event-clase'
                    },
                    {
                        title: 'Examen de Historia',
                        start: new Date(new Date().setDate(new Date().getDate() + 2)),
                        end: new Date(new Date().setDate(new Date().getDate() + 2)),
                        extendedProps: {
                            type: 'examen',
                            description: 'Examen parcial sobre Revolución Industrial',
                            teacher: 'Prof. Martínez',
                            location: 'Aula 105'
                        },
                        className: 'event-examen'
                    },
                    {
                        title: 'Entrega de Tarea',
                        start: new Date(new Date().setDate(new Date().getDate() + 3)),
                        extendedProps: {
                            type: 'tarea',
                            description: 'Entregar ensayo sobre literatura moderna',
                            teacher: 'Prof. López'
                        },
                        className: 'event-tarea'
                    }
                ]
            });

            calendar.render();

            // Elementos del DOM
            const addEventBtn = document.getElementById('addEventBtn');
            const viewTasksBtn = document.getElementById('viewTasksBtn');
            const eventModal = document.getElementById('eventModal');
            const detailsModal = document.getElementById('detailsModal');
            const closeModal = document.getElementById('closeModal');
            const closeDetails = document.getElementById('closeDetails');
            const eventForm = document.getElementById('eventForm');
            const editEventBtn = document.getElementById('editEventBtn');
            const deleteEventBtn = document.getElementById('deleteEventBtn');

            // Variables para manejar eventos
            let currentEvent = null;

            // Funciones
            function openAddEventModal(start, end) {
                document.getElementById('eventTitle').value = '';
                document.getElementById('eventType').value = 'clase';
                document.getElementById('eventDescription').value = '';
                document.getElementById('eventTeacher').value = '';
                document.getElementById('eventLocation').value = '';

                if (start) {
                    const startStr = start.toISOString().slice(0, 16);
                    document.getElementById('eventStart').value = startStr;
                }

                if (end) {
                    const endStr = end.toISOString().slice(0, 16);
                    document.getElementById('eventEnd').value = endStr;
                }

                eventModal.style.display = 'flex';
            }

            function showEventDetails(event) {
                currentEvent = event;

                document.getElementById('detailsTitle').textContent = event.title;
                document.getElementById('detailsType').textContent = getEventTypeName(event.extendedProps.type);
                document.getElementById('detailsDate').textContent = event.start.toLocaleDateString('es-ES');

                if (event.end) {
                    document.getElementById('detailsTime').textContent =
                        `${event.start.toLocaleTimeString('es-ES', {hour: '2-digit', minute:'2-digit'})} - ${event.end.toLocaleTimeString('es-ES', {hour: '2-digit', minute:'2-digit'})}`;
                } else {
                    document.getElementById('detailsTime').textContent = event.start.toLocaleTimeString('es-ES', {hour: '2-digit', minute:'2-digit'});
                }

                document.getElementById('detailsTeacher').textContent = event.extendedProps.teacher || 'No especificado';
                document.getElementById('detailsLocation').textContent = event.extendedProps.location || 'No especificado';
                document.getElementById('detailsDescription').textContent = event.extendedProps.description || 'Sin descripción';

                detailsModal.style.display = 'flex';
            }

            function getEventTypeName(type) {
                const types = {
                    'clase': 'Clase',
                    'examen': 'Examen',
                    'tarea': 'Tarea',
                    'reunion': 'Reunión',
                    'actividad': 'Actividad'
                };
                return types[type] || 'Evento';
            }

            function getEventClass(type) {
                const classes = {
                    'clase': 'event-clase',
                    'examen': 'event-examen',
                    'tarea': 'event-tarea',
                    'reunion': 'event-reunion',
                    'actividad': 'event-actividad'
                };
                return classes[type] || '';
            }

            // Event Listeners
            addEventBtn.addEventListener('click', function() {
                openAddEventModal();
            });

            viewTasksBtn.addEventListener('click', function() {
                window.location.href = '@Url.Action("Tarea", "Home")';
            });

            closeModal.addEventListener('click', function() {
                eventModal.style.display = 'none';
            });

            closeDetails.addEventListener('click', function() {
                detailsModal.style.display = 'none';
            });

            editEventBtn.addEventListener('click', function() {
                if (!currentEvent) return;

                // Llenar el formulario con los datos del evento actual
                document.getElementById('eventTitle').value = currentEvent.title;
                document.getElementById('eventType').value = currentEvent.extendedProps.type;

                const startStr = currentEvent.start.toISOString().slice(0, 16);
                document.getElementById('eventStart').value = startStr;

                if (currentEvent.end) {
                    const endStr = currentEvent.end.toISOString().slice(0, 16);
                    document.getElementById('eventEnd').value = endStr;
                }

                document.getElementById('eventDescription').value = currentEvent.extendedProps.description || '';
                document.getElementById('eventTeacher').value = currentEvent.extendedProps.teacher || '';
                document.getElementById('eventLocation').value = currentEvent.extendedProps.location || '';

                // Cambiar el texto del botón de submit
                const submitBtn = eventForm.querySelector('button[type="submit"]');
                submitBtn.textContent = 'Actualizar Evento';
                submitBtn.dataset.mode = 'edit';

                // Mostrar el modal de agregar/editar
                detailsModal.style.display = 'none';
                eventModal.style.display = 'flex';
            });

            deleteEventBtn.addEventListener('click', function() {
                if (!currentEvent) return;

                if (confirm('¿Estás seguro de que deseas eliminar este evento?')) {
                    currentEvent.remove();
                    detailsModal.style.display = 'none';
                    alert('Evento eliminado correctamente');
                }
            });

            eventForm.addEventListener('submit', function(e) {
                e.preventDefault();

                const title = document.getElementById('eventTitle').value;
                const type = document.getElementById('eventType').value;
                const start = document.getElementById('eventStart').value;
                const end = document.getElementById('eventEnd').value;
                const description = document.getElementById('eventDescription').value;
                const teacher = document.getElementById('eventTeacher').value;
                const location = document.getElementById('eventLocation').value;

                const eventData = {
                    title: title,
                    start: start,
                    end: end || null,
                    extendedProps: {
                        type: type,
                        description: description,
                        teacher: teacher,
                        location: location
                    },
                    className: getEventClass(type)
                };

                if (eventForm.querySelector('button[type="submit"]').dataset.mode === 'edit') {
                    // Actualizar evento existente
                    currentEvent.setProp('title', eventData.title);
                    currentEvent.setStart(eventData.start);
                    currentEvent.setEnd(eventData.end);
                    currentEvent.setExtendedProp('type', eventData.extendedProps.type);
                    currentEvent.setExtendedProp('description', eventData.extendedProps.description);
                    currentEvent.setExtendedProp('teacher', eventData.extendedProps.teacher);
                    currentEvent.setExtendedProp('location', eventData.extendedProps.location);
                    currentEvent.setProp('classNames', [eventData.className]);

                    alert('Evento actualizado correctamente');
                } else {
                    // Agregar nuevo evento
                    calendar.addEvent(eventData);
                    alert('Evento agregado correctamente');
                }

                // Resetear el formulario
                eventForm.reset();
                eventForm.querySelector('button[type="submit"]').textContent = 'Guardar Evento';
                delete eventForm.querySelector('button[type="submit"]').dataset.mode;

                // Cerrar el modal
                eventModal.style.display = 'none';
            });

            // Cerrar modales al hacer clic fuera del contenido
            window.addEventListener('click', function(e) {
                if (e.target === eventModal) {
                    eventModal.style.display = 'none';
                }
                if (e.target === detailsModal) {
                    detailsModal.style.display = 'none';
                }
            });
        });
        </script>
    </body>
</html>
}